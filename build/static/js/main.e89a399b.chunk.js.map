{"version":3,"sources":["components/Covid.jsx","App.js","index.js"],"names":["Covid","useState","title","setTitle","dataDate","setDataDate","stats","setStats","countries","setCountries","select","setSelect","loading","setLoading","useEffect","getDataCovid","a","axios","get","data","moment","Date","format","Global","Countries","console","log","message","numberWithCommas","x","toString","replace","className","href","target","rel","class","type","disabled","role","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Math","round","value","placeholder","onChange","e","country","find","item","ID","Country","hidden","selected","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e89a399b.chunk.js","sourcesContent":["import axios from 'axios'\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react'\n\nexport const Covid = () => {\n\n    const [title, setTitle] = useState('Global');\n    const [dataDate, setDataDate] = useState('');\n    const [stats, setStats] = useState({});\n    const [countries, setCountries] = useState([]);\n    const [select, setSelect] = useState(0);\n    const [loading, setLoading] = useState('');\n\n    useEffect(() => {\n        getDataCovid();\n    }, []);\n\n    const getDataCovid = async() => {\n        try {\n            setLoading(true);\n            const {data} = await axios.get('https://api.covid19api.com/summary');\n            setLoading(false);\n            setTitle('Global')\n            setSelect(0);\n            setDataDate(moment(data.Date).format('MMMM Do YYYY, h:mm:ss a'))\n            setStats(data.Global)\n            setCountries(data.Countries)            \n        } catch (error) {\n            console.log('error en getDataCovid', error.message)\n        }\n        \n    };\n\n    const onChange = (e) => {\n        setSelect(e.target.value)\n        const country = countries.find(item => item.ID === e.target.value)\n        setStats(country)\n        setTitle(country.Country)\n    };\n\n    const numberWithCommas = (x) => {\n        if (typeof x !== 'undefined'){return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        };\n    };\n\n    return (\n        <div>\n            <header className='text-center text-white bg-dark p-4 mb-5 col-xxl-12'>\n                <div className='fw-bold fs-1'>\n                    <i className='fa fa-biohazard m-2'></i>\n                    COVID-19 TRACKER\n                </div>\n                <p>\n                    API by\n                    {' '}\n                    <a href=\"https://api.covid19api.com\" target = '_blank' rel = 'noreferrer' className='text-white'>\n                        Covid19api.com\n                    </a>\n                </p>\n            </header>\n\n            {loading?\n                <div class=\"d-grid gap-2\">\n                    <button className=\"btn btn-dark mx-auto\" type=\"button\" disabled>\n                    <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    Loading...\n                    </button>\n                </div>: \n                    <div className=\"container\">\n                        <div className=\"text-center\">\n                            <h2 className='fw-bold'>{title}</h2>\n                            <div className=\"my-4\">{dataDate}</div>\n                        </div>\n\n                        <div className=\"row g-4 mb-5\">\n                            {/* box-1 */}\n                            <div className=\"col-md-4\">\n                                <div className=\"card text-center p-5 bg-secondary\">\n                                    <h3 className='fw-bold mb-4 text-white'>* CASOS *</h3>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Nuevos : </span>\n                                        {numberWithCommas(stats.NewConfirmed)}\n                                    </div>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Totales : </span>\n                                        {numberWithCommas(stats.TotalConfirmed)}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* box-2 */}\n                            <div className=\"col-md-4\">\n                                <div className=\"card text-center p-5 bg-danger\">\n                                    <h3 className='fw-bold mb-4 text-white'>* MUERTOS *</h3>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Nuevos : </span>\n                                        {numberWithCommas(stats.NewDeaths)}\n                                    </div>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Totales : </span>\n                                        {numberWithCommas(stats.TotalDeaths)}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* box-3 */}\n                            <div className=\"col-md-4\">\n                                <div className=\"card text-center p-5 bg-primary\">\n                                    <h3 className='fw-bold mb-4 text-white'>* RECUPERADOS *</h3>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Nuevos : </span>\n                                        {numberWithCommas(stats.NewRecovered)}\n                                    </div>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Totales : </span>\n                                        {numberWithCommas(stats.TotalRecovered)}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div className=\"row g-4 mb-4\">\n                            {/* box-1 */}\n                            <div className=\"col-md-12\">\n                                <div className=\"card text-center p-5 bg-warning\">\n                                    <h3 className='fw-bold mb-4'>* TASAS *</h3>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Mortalidad : </span>\n                                        {Math.round(stats.TotalDeaths/stats.TotalConfirmed*10000)/100} {'%'}\n                                    </div>\n                                    <div className=\"mb-4 fs-4\">\n                                        <span className='fw-bold'>Recuperaci√≥n : </span>\n                                        {Math.round(stats.TotalRecovered/stats.TotalConfirmed*10000)/100} {'%'}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <select className=\"my-3 col-12 py-3 border bg-dark text-white\" value={select} placeholder='Seleccione el pa√≠s' onChange = {e => onChange(e)}>\n                            <option hidden selected>\n                                Seleccione el pa√≠s\n                            </option>\n                            {\n                                countries.map(item => (\n                                    <option key={item.ID} value={item.ID}>\n                                        {item.Country}\n                                    </option>\n                                ))\n                            }\n                        </select>\n\n                        {stats.Country && (\n                            <div class=\"d-grid gap-2 col-6 mx-auto mb-4\">\n                                <button className='btn btn-dark mx-auto' onClick = {() => getDataCovid()}>\n                                Global\n                                </button>\n                            </div>\n                        )}\n\n                        \n                    </div>\n            }\n    </div>\n    )\n}\n","import { Covid } from \"./components/Covid\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Covid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}